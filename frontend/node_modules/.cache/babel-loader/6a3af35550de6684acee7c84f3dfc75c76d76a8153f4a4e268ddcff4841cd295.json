{"ast":null,"code":"// // Watch.js\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './Navbar';\n// import './Watch.css';\n// const Watch = () => {\n//   const [videos, setVideos] = useState([]);\n//   useEffect(() => {\n//     // Fetch video/reel data from an API or use mock data\n//     const mockData = [\n//       { id: 1, type: 'youtube', url: 'https://www.youtube.com/embed/Uj4kKoDdJF8' },\n//       { id: 2, type: 'instagram', url: 'https://instagram.com/p/C2fwM9IIrGB/embed/' },\n//       { id: 3, type: 'youtube', url: 'https://www.youtube.com/embed/_NGz6QcbsF8' },\n//       { id: 4, type: 'youtube', url: 'https://www.youtube.com/embed/t-3ErVKHgl4' },\n//       { id: 5, type: 'instagram', url: 'https://instagram.com/p/C1PpPVDMJlK/embed/' },\n//       { id: 6, type: 'youtube', url: 'https://www.youtube.com/embed/Dfqvc2eOa-M' },\n//       { id: 7, type: 'instagram', url: 'https://instagram.com/reel/C56lMVTSHUq/embed/' },\n//       { id: 8, type: 'youtube', url: 'https://www.youtube.com/embed/xSrricvmTv8' },\n//       { id: 9, type: 'instagram', url: 'https://instagram.com/p/Cj78bHkP3S1/embed/' },\n//       { id: 10, type: 'youtube', url: 'https://www.youtube.com/embed/XxtoahxXyCc' },\n//     ];\n//     setVideos(mockData);\n//   }, []);\n//   return (\n//     <div className=\"watch-container\">\n//       <Navbar />\n//       <div className=\"watch-grids\">\n//         <div className=\"watch-grid grid-1\">\n//           {videos.slice(0, 4).map((video) => (\n//             <div key={video.id} className=\"watch-item\">\n//               {video.type === 'youtube' ? (\n//                 <iframe\n//                   className=\"youtube-video\"\n//                   title={`YouTube Video ${video.id}`}\n//                   src={video.url}\n//                   frameBorder=\"0\"\n//                   allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n//                   allowFullScreen\n//                 />\n//               ) : (\n//                 <iframe\n//                   className=\"instagram-reel\"\n//                   title={`Instagram Reel ${video.id}`}\n//                   src={video.url}\n//                   frameBorder=\"0\"\n//                   allowFullScreen\n//                 />\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"watch-grid grid-2\">\n//           {videos.slice(4, 6).map((video) => (\n//             <div key={video.id} className=\"watch-item\">\n//               {video.type === 'youtube' ? (\n//                 <iframe\n//                   className=\"youtube-video\"\n//                   title={`YouTube Video ${video.id}`}\n//                   src={video.url}\n//                   frameBorder=\"0\"\n//                   allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n//                   allowFullScreen\n//                 />\n//               ) : (\n//                 <iframe\n//                   className=\"instagram-reel\"\n//                   title={`Instagram Reel ${video.id}`}\n//                   src={video.url}\n//                   frameBorder=\"0\"\n//                   allowFullScreen\n//                 />\n//               )}\n//             </div>\n//           ))}\n//           {videos.slice(6, 8).map((video) => (\n//             <div key={video.id} className=\"watch-item\">\n//               {video.type === 'youtube' ? (\n//                 <iframe\n//                   className=\"youtube-video\"\n//                   title={`YouTube Video ${video.id}`}\n//                   src={video.url}\n//                   frameBorder=\"0\"\n//                   allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n//                   allowFullScreen\n//                 />\n//               ) : (\n//                 <iframe\n//                   className=\"instagram-reel\"\n//                   title={`Instagram Reel ${video.id}`}\n//                   src={video.url}\n//                   frameBorder=\"0\"\n//                   allowFullScreen\n//                 />\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"watch-grid grid-3\">\n//           {videos.slice(8, 10).map((video) => (\n//             <div key={video.id} className=\"watch-item\">\n//               {video.type === 'youtube' ? (\n//                 <iframe\n//                   className=\"youtube-video\"\n//                   title={`YouTube Video ${video.id}`}\n//                   src={video.url}\n//                   frameBorder=\"0\"\n//                   allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n//                   allowFullScreen\n//                 />\n//               ) : (\n//                 <iframe\n//                   className=\"instagram-reel\"\n//                   title={`Instagram Reel ${video.id}`}\n//                   src={video.url}\n//                   frameBorder=\"0\"\n//                   allowFullScreen\n//                 />\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Watch;\n// Watch.js\nimport React,{useState,useEffect}from'react';import Navbar from'./Navbar';import'./Watch.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Watch=()=>{const[videos,setVideos]=useState([]);useEffect(()=>{// Fetch video/reel data from an API or use mock data\nconst mockData=[{id:1,type:'youtube',url:'https://www.youtube.com/embed/Uj4kKoDdJF8'},{id:2,type:'instagram',url:'https://instagram.com/p/C2fwM9IIrGB/embed/'},{id:3,type:'youtube',url:'https://www.youtube.com/embed/_NGz6QcbsF8'},{id:5,type:'instagram',url:'https://instagram.com/p/C1PpPVDMJlK/embed/'},{id:6,type:'youtube',url:'https://www.youtube.com/embed/Dfqvc2eOa-M'},{id:7,type:'instagram',url:'https://instagram.com/reel/C56lMVTSHUq/embed/'},{id:9,type:'instagram',url:'https://instagram.com/p/Cj78bHkP3S1/embed/'},{id:10,type:'youtube',url:'https://www.youtube.com/embed/XxtoahxXyCc'}];setVideos(mockData);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"watch-container\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"watch-grids\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"watch-grid grid-1\",children:videos.slice(0,3).map(video=>/*#__PURE__*/_jsx(\"div\",{className:\"watch-item\",children:/*#__PURE__*/_jsx(\"iframe\",{className:\"vertical-video\",title:\"\".concat(video.type==='youtube'?'YouTube':'Instagram',\" Video \").concat(video.id),src:video.url,frameBorder:\"0\",allow:\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:true})},video.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"watch-grid grid-2\",children:videos.slice(3,6).map(video=>/*#__PURE__*/_jsx(\"div\",{className:\"watch-item\",children:/*#__PURE__*/_jsx(\"iframe\",{className:\"vertical-video\",title:\"\".concat(video.type==='youtube'?'YouTube':'Instagram',\" Video \").concat(video.id),src:video.url,frameBorder:\"0\",allow:\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:true})},video.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"watch-grid grid-3\",children:videos.slice(6,8).map(video=>/*#__PURE__*/_jsx(\"div\",{className:\"watch-item\",children:/*#__PURE__*/_jsx(\"iframe\",{className:\"vertical-video\",title:\"\".concat(video.type==='youtube'?'YouTube':'Instagram',\" Video \").concat(video.id),src:video.url,frameBorder:\"0\",allow:\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:true})},video.id))})]})]});};export default Watch;","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsx","_jsx","jsxs","_jsxs","Watch","videos","setVideos","mockData","id","type","url","className","children","slice","map","video","title","concat","src","frameBorder","allow","allowFullScreen"],"sources":["C:/Users/kohli/OneDrive/Documents/Collaborativeinterestapp/VibeTribe/frontend/src/components/watch.jsx"],"sourcesContent":["// // Watch.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './Navbar';\r\n// import './Watch.css';\r\n\r\n// const Watch = () => {\r\n//   const [videos, setVideos] = useState([]);\r\n\r\n\r\n//   useEffect(() => {\r\n//     // Fetch video/reel data from an API or use mock data\r\n//     const mockData = [\r\n//       { id: 1, type: 'youtube', url: 'https://www.youtube.com/embed/Uj4kKoDdJF8' },\r\n//       { id: 2, type: 'instagram', url: 'https://instagram.com/p/C2fwM9IIrGB/embed/' },\r\n//       { id: 3, type: 'youtube', url: 'https://www.youtube.com/embed/_NGz6QcbsF8' },\r\n//       { id: 4, type: 'youtube', url: 'https://www.youtube.com/embed/t-3ErVKHgl4' },\r\n//       { id: 5, type: 'instagram', url: 'https://instagram.com/p/C1PpPVDMJlK/embed/' },\r\n//       { id: 6, type: 'youtube', url: 'https://www.youtube.com/embed/Dfqvc2eOa-M' },\r\n//       { id: 7, type: 'instagram', url: 'https://instagram.com/reel/C56lMVTSHUq/embed/' },\r\n//       { id: 8, type: 'youtube', url: 'https://www.youtube.com/embed/xSrricvmTv8' },\r\n//       { id: 9, type: 'instagram', url: 'https://instagram.com/p/Cj78bHkP3S1/embed/' },\r\n//       { id: 10, type: 'youtube', url: 'https://www.youtube.com/embed/XxtoahxXyCc' },\r\n//     ];\r\n\r\n//     setVideos(mockData);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"watch-container\">\r\n//       <Navbar />\r\n//       <div className=\"watch-grids\">\r\n//         <div className=\"watch-grid grid-1\">\r\n//           {videos.slice(0, 4).map((video) => (\r\n//             <div key={video.id} className=\"watch-item\">\r\n//               {video.type === 'youtube' ? (\r\n//                 <iframe\r\n//                   className=\"youtube-video\"\r\n//                   title={`YouTube Video ${video.id}`}\r\n//                   src={video.url}\r\n//                   frameBorder=\"0\"\r\n//                   allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               ) : (\r\n//                 <iframe\r\n//                   className=\"instagram-reel\"\r\n//                   title={`Instagram Reel ${video.id}`}\r\n//                   src={video.url}\r\n//                   frameBorder=\"0\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               )}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <div className=\"watch-grid grid-2\">\r\n//           {videos.slice(4, 6).map((video) => (\r\n//             <div key={video.id} className=\"watch-item\">\r\n//               {video.type === 'youtube' ? (\r\n//                 <iframe\r\n//                   className=\"youtube-video\"\r\n//                   title={`YouTube Video ${video.id}`}\r\n//                   src={video.url}\r\n//                   frameBorder=\"0\"\r\n//                   allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               ) : (\r\n//                 <iframe\r\n//                   className=\"instagram-reel\"\r\n//                   title={`Instagram Reel ${video.id}`}\r\n//                   src={video.url}\r\n//                   frameBorder=\"0\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               )}\r\n//             </div>\r\n//           ))}\r\n//           {videos.slice(6, 8).map((video) => (\r\n//             <div key={video.id} className=\"watch-item\">\r\n//               {video.type === 'youtube' ? (\r\n//                 <iframe\r\n//                   className=\"youtube-video\"\r\n//                   title={`YouTube Video ${video.id}`}\r\n//                   src={video.url}\r\n//                   frameBorder=\"0\"\r\n//                   allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               ) : (\r\n//                 <iframe\r\n//                   className=\"instagram-reel\"\r\n//                   title={`Instagram Reel ${video.id}`}\r\n//                   src={video.url}\r\n//                   frameBorder=\"0\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               )}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <div className=\"watch-grid grid-3\">\r\n//           {videos.slice(8, 10).map((video) => (\r\n//             <div key={video.id} className=\"watch-item\">\r\n//               {video.type === 'youtube' ? (\r\n//                 <iframe\r\n//                   className=\"youtube-video\"\r\n//                   title={`YouTube Video ${video.id}`}\r\n//                   src={video.url}\r\n//                   frameBorder=\"0\"\r\n//                   allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               ) : (\r\n//                 <iframe\r\n//                   className=\"instagram-reel\"\r\n//                   title={`Instagram Reel ${video.id}`}\r\n//                   src={video.url}\r\n//                   frameBorder=\"0\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               )}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Watch;\r\n\r\n\r\n// Watch.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport './Watch.css';\r\n\r\nconst Watch = () => {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch video/reel data from an API or use mock data\r\n    const mockData = [\r\n      { id: 1, type: 'youtube', url: 'https://www.youtube.com/embed/Uj4kKoDdJF8' },\r\n      { id: 2, type: 'instagram', url: 'https://instagram.com/p/C2fwM9IIrGB/embed/' },\r\n      { id: 3, type: 'youtube', url: 'https://www.youtube.com/embed/_NGz6QcbsF8' },\r\n      { id: 5, type: 'instagram', url: 'https://instagram.com/p/C1PpPVDMJlK/embed/' },\r\n      { id: 6, type: 'youtube', url: 'https://www.youtube.com/embed/Dfqvc2eOa-M' },\r\n      { id: 7, type: 'instagram', url: 'https://instagram.com/reel/C56lMVTSHUq/embed/' },\r\n      { id: 9, type: 'instagram', url: 'https://instagram.com/p/Cj78bHkP3S1/embed/' },\r\n      { id: 10, type: 'youtube', url: 'https://www.youtube.com/embed/XxtoahxXyCc' },\r\n    ];\r\n\r\n    setVideos(mockData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"watch-container\">\r\n      <Navbar />\r\n      <div className=\"watch-grids\">\r\n        <div className=\"watch-grid grid-1\">\r\n          {videos.slice(0, 3).map((video) => (\r\n            <div key={video.id} className=\"watch-item\">\r\n              <iframe\r\n                className=\"vertical-video\"\r\n                title={`${video.type === 'youtube' ? 'YouTube' : 'Instagram'} Video ${video.id}`}\r\n                src={video.url}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"watch-grid grid-2\">\r\n          {videos.slice(3, 6).map((video) => (\r\n            <div key={video.id} className=\"watch-item\">\r\n              <iframe\r\n                className=\"vertical-video\"\r\n                title={`${video.type === 'youtube' ? 'YouTube' : 'Instagram'} Video ${video.id}`}\r\n                src={video.url}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"watch-grid grid-3\">\r\n          {videos.slice(6, 8).map((video) => (\r\n            <div key={video.id} className=\"watch-item\">\r\n              <iframe\r\n                className=\"vertical-video\"\r\n                title={`${video.type === 'youtube' ? 'YouTube' : 'Instagram'} Video ${video.id}`}\r\n                src={video.url}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watch;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}