{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kohli\\\\OneDrive\\\\Documents\\\\Collaborativeinterestapp\\\\frontend\\\\src\\\\oauth\\\\views\\\\login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import styled from 'styled-components';\n// import googleLogo from './google.png';\n// import image from './image2.jpg';\n\n// const BackgroundWrapper = styled.div`\n// background-image: url(${image});\n// background-size: 250px 250px; /* Adjust the size of each tile */\n// background-repeat: repeat; /* Set the background to repeat */\n// min-height: 100vh;\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// `;\n\n// const Container = styled.div`\n//   width: 500px;\n//   margin: 100px auto;\n//   padding: 40px;\n//   background-position: center; // Adjust as needed\n//   background-repeat: no-repeat; // Adjust as needed\n//   background: linear-gradient(to bottom right, #CCCCFF, #D3D3D3);\n//   border-radius: 10px;\n//   box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n//   animation: slide-up 0.5s ease;\n\n//   @keyframes slide-up {\n//     0% {\n//       transform: translateY(50px);\n//       opacity: 0;\n//     }\n//     100% {\n//       transform: translateY(0);\n//       opacity: 1;\n//     }\n//   }\n// `;\n\n// const Title = styled.h1`\n//   text-align: center;\n//   color: #f70776;\n//   font-weight: 700;\n//   text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n// `;\n\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n// `;\n\n// const Label = styled.label`\n//   font-weight: 700;\n//   margin-bottom: 5px;\n//   color: #626fe6;\n// `;\n\n// const Input = styled.input`\n//   padding: 10px;\n//   margin-bottom: 10px;\n//   border: 2px solid #f70776;\n//   border-radius: 5px;\n//   transition: border-color 0.3s ease;\n\n//   &:focus {\n//     border-color: #ff9999;\n//     outline: none;\n//   }\n// `;\n\n// const Button = styled.button`\n//   padding: 10px;\n//   background-color: #f70776;\n//   color: #fff;\n//   border: none;\n//   border-radius: 5px;\n//   cursor: pointer;\n//   transition: all 0.3s ease;\n//   font-weight: 700;\n\n//   &:hover {\n//     background-color: #ff9999;\n//     box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n//   }\n// `;\n\n// const OAuthButton = styled.a`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   color: #757575;\n//   font-size: 16px;\n//   font-weight: 500;\n//   text-decoration: none;\n//   padding: 8px 16px;\n//   background-color: #fff;\n//   border: 1px solid #dadce0;\n//   border-radius: 4px;\n//   box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n//   transition: all 0.3s ease;\n\n//   &:hover {\n//     background-color: #f8f9fa;\n//     box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n//   }\n\n//   img {\n//     width: 20px;\n//     height: 20px;\n//     margin-right: 8px;\n//   }\n// `;\n\n// const Divider = styled.div`\n//   text-align: center;\n//   margin-top: 20px;\n//   margin-bottom: 20px;\n//   color: #999;\n// `;\n\n// const SignupLink = styled.div`\n//   text-align: center;\n//   margin-top: 20px;\n//   color: #666;\n\n//   a {\n//     color: #e06666;\n//     text-decoration: none;\n//     font-weight: 700;\n//     transition: color 0.3s ease;\n\n//     &:hover {\n//       color: #ff9999;\n//     }\n//   }\n// `;\n\n// const errorMessageStyle = {\n//   color: 'red', // Set text color to red for error messages\n//   fontSize: '14px', // Set font size\n//   marginTop: '10px', // Add some space between the message and other elements\n// };\n\n// const LoginPage = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [college, setCollege] = useState('');\n\n//     const handleSubmit = (e) => {\n//       e.preventDefault();\n\n//       // Make a GET request to fetch user data by ID\n//       fetch(`http://localhost:4000/login/${email}`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       })\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch user data');\n//         }\n//         // Parse the response data as JSON\n//         return response.json();\n//       })\n//       .then(userData => {\n//         if (userData.email === email && userData.password === password) {\n//           window.location.href = 'http://localhost:3000/home';\n//         } else {\n\n//           const errorMessage = document.getElementById('error-message');\n//           errorMessage.textContent = 'Invalid email or password';\n//         }\n//       })\n//       .catch(error => {\n//         // Display error message for any other errors on the page\n//         // Instead of logging to console\n//         const errorMessage = document.getElementById('error-message');\n//         errorMessage.textContent = 'Error: Failed to fetch user data';\n//       });\n//     };\n\n//   return (\n//     <BackgroundWrapper>\n//     <Container>\n//       <Form onSubmit={handleSubmit}>\n//         <Title>VibeTribe</Title>\n//         <Label htmlFor=\"email\">Email:</Label>\n//         <Input\n//           type=\"email\"\n//           id=\"email\"\n//           name=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <Label htmlFor=\"college\">College Name:</Label>\n//         <Input\n//           type=\"text\"\n//           id=\"college\"\n//           name=\"college\"\n//           value={college}\n//           onChange={(e) => setCollege(e.target.value)}\n//           required\n//         />\n//         <Label htmlFor=\"password\">Password:</Label>\n//         <Input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <div id=\"error-message\"    style={errorMessageStyle}  ></div>\n\n//         <Button type=\"submit\">Log in</Button>\n//       </Form>\n//       <Divider>OR</Divider>\n//       <OAuthButton href=\"http://localhost:4000/auth/google\">\n//         <img src={googleLogo} alt=\"Google Logo\" />\n//         Continue with Google\n//       </OAuthButton>\n//       <SignupLink>\n//         Not registered yet? <a href=\"/signup\">Sign up</a>\n//       </SignupLink>\n//     </Container>\n//     </BackgroundWrapper>\n//   );\n// };\n\n// export default LoginPage; \n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport googleLogo from './google.png';\nimport image from './image2.jpg';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundWrapper = styled.div`\n  background-image: url(${image});\n  background-size: 250px 250px;\n  background-repeat: repeat;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n// ... (other styled components omitted for brevity)\n_c = BackgroundWrapper;\nconst errorMessageStyle = {\n  color: 'red',\n  fontSize: '14px',\n  marginTop: '10px'\n};\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [college, setCollege] = useState('');\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Make a GET request to fetch user data by ID\n    fetch(`http://localhost:4000/login/${email}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n      return response.json();\n    }).then(userData => {\n      if (userData.email === email && userData.password === password) {\n        window.location.href = 'http://localhost:3000/home';\n      } else {\n        const errorMessage = document.getElementById('error-message');\n        errorMessage.textContent = 'Invalid email or password';\n      }\n    }).catch(error => {\n      const errorMessage = document.getElementById('error-message');\n      errorMessage.textContent = 'Error: Failed to fetch user data';\n    });\n  };\n  const handleForgotPassword = e => {\n    e.preventDefault();\n    emailjs.sendForm('service_2h240l4', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID').then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"VibeTribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"college\",\n          children: \"College Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"college\",\n          name: \"college\",\n          value: college,\n          onChange: e => setCollege(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"forgotPasswordEmail\",\n          children: \"Enter your email for password reset:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          id: \"forgotPasswordEmail\",\n          name: \"forgotPasswordEmail\",\n          value: forgotPasswordEmail,\n          onChange: e => setForgotPasswordEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"error-message\",\n          style: errorMessageStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleForgotPassword,\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OAuthButton, {\n        href: \"http://localhost:4000/auth/google\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: googleLogo,\n          alt: \"Google Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), \"Continue with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignupLink, {\n        children: [\"Not registered yet? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"wD/Q65XnlLCySaRMB+Ma4ziK2dk=\");\n_c2 = LoginPage;\nexport default LoginPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"BackgroundWrapper\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"names":["React","useState","styled","googleLogo","image","emailjs","jsxDEV","_jsxDEV","BackgroundWrapper","div","_c","errorMessageStyle","color","fontSize","marginTop","LoginPage","_s","email","setEmail","password","setPassword","college","setCollege","forgotPasswordEmail","setForgotPasswordEmail","handleSubmit","e","preventDefault","fetch","method","headers","then","response","ok","Error","json","userData","window","location","href","errorMessage","document","getElementById","textContent","catch","error","handleForgotPassword","sendForm","target","result","console","log","text","children","Container","Form","onSubmit","Title","fileName","_jsxFileName","lineNumber","columnNumber","Label","htmlFor","Input","type","id","name","value","onChange","required","style","Button","onClick","Divider","OAuthButton","src","alt","SignupLink","_c2","$RefreshReg$"],"sources":["C:/Users/kohli/OneDrive/Documents/Collaborativeinterestapp/frontend/src/oauth/views/login.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import styled from 'styled-components';\r\n// import googleLogo from './google.png';\r\n// import image from './image2.jpg';\r\n\r\n\r\n// const BackgroundWrapper = styled.div`\r\n// background-image: url(${image});\r\n// background-size: 250px 250px; /* Adjust the size of each tile */\r\n// background-repeat: repeat; /* Set the background to repeat */\r\n// min-height: 100vh;\r\n// display: flex;\r\n// justify-content: center;\r\n// align-items: center;\r\n// `;\r\n\r\n\r\n// const Container = styled.div`\r\n//   width: 500px;\r\n//   margin: 100px auto;\r\n//   padding: 40px;\r\n//   background-position: center; // Adjust as needed\r\n//   background-repeat: no-repeat; // Adjust as needed\r\n//   background: linear-gradient(to bottom right, #CCCCFF, #D3D3D3);\r\n//   border-radius: 10px;\r\n//   box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n//   animation: slide-up 0.5s ease;\r\n\r\n//   @keyframes slide-up {\r\n//     0% {\r\n//       transform: translateY(50px);\r\n//       opacity: 0;\r\n//     }\r\n//     100% {\r\n//       transform: translateY(0);\r\n//       opacity: 1;\r\n//     }\r\n//   }\r\n// `;\r\n\r\n// const Title = styled.h1`\r\n//   text-align: center;\r\n//   color: #f70776;\r\n//   font-weight: 700;\r\n//   text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\r\n// `;\r\n\r\n// const Form = styled.form`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n// `;\r\n\r\n// const Label = styled.label`\r\n//   font-weight: 700;\r\n//   margin-bottom: 5px;\r\n//   color: #626fe6;\r\n// `;\r\n\r\n// const Input = styled.input`\r\n//   padding: 10px;\r\n//   margin-bottom: 10px;\r\n//   border: 2px solid #f70776;\r\n//   border-radius: 5px;\r\n//   transition: border-color 0.3s ease;\r\n\r\n//   &:focus {\r\n//     border-color: #ff9999;\r\n//     outline: none;\r\n//   }\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   padding: 10px;\r\n//   background-color: #f70776;\r\n//   color: #fff;\r\n//   border: none;\r\n//   border-radius: 5px;\r\n//   cursor: pointer;\r\n//   transition: all 0.3s ease;\r\n//   font-weight: 700;\r\n\r\n//   &:hover {\r\n//     background-color: #ff9999;\r\n//     box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n//   }\r\n// `;\r\n\r\n// const OAuthButton = styled.a`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   color: #757575;\r\n//   font-size: 16px;\r\n//   font-weight: 500;\r\n//   text-decoration: none;\r\n//   padding: 8px 16px;\r\n//   background-color: #fff;\r\n//   border: 1px solid #dadce0;\r\n//   border-radius: 4px;\r\n//   box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n//   transition: all 0.3s ease;\r\n\r\n//   &:hover {\r\n//     background-color: #f8f9fa;\r\n//     box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\r\n//   }\r\n\r\n//   img {\r\n//     width: 20px;\r\n//     height: 20px;\r\n//     margin-right: 8px;\r\n//   }\r\n// `;\r\n\r\n// const Divider = styled.div`\r\n//   text-align: center;\r\n//   margin-top: 20px;\r\n//   margin-bottom: 20px;\r\n//   color: #999;\r\n// `;\r\n\r\n\r\n\r\n// const SignupLink = styled.div`\r\n//   text-align: center;\r\n//   margin-top: 20px;\r\n//   color: #666;\r\n\r\n//   a {\r\n//     color: #e06666;\r\n//     text-decoration: none;\r\n//     font-weight: 700;\r\n//     transition: color 0.3s ease;\r\n\r\n//     &:hover {\r\n//       color: #ff9999;\r\n//     }\r\n//   }\r\n// `;\r\n\r\n// const errorMessageStyle = {\r\n//   color: 'red', // Set text color to red for error messages\r\n//   fontSize: '14px', // Set font size\r\n//   marginTop: '10px', // Add some space between the message and other elements\r\n// };\r\n\r\n\r\n// const LoginPage = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [college, setCollege] = useState('');\r\n\r\n  \r\n  \r\n\r\n\r\n//     const handleSubmit = (e) => {\r\n//       e.preventDefault();\r\n      \r\n//       // Make a GET request to fetch user data by ID\r\n//       fetch(`http://localhost:4000/login/${email}`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       })\r\n//       .then(response => {\r\n//         if (!response.ok) {\r\n//           throw new Error('Failed to fetch user data');\r\n//         }\r\n//         // Parse the response data as JSON\r\n//         return response.json();\r\n//       })\r\n//       .then(userData => {\r\n//         if (userData.email === email && userData.password === password) {\r\n//           window.location.href = 'http://localhost:3000/home';\r\n//         } else {\r\n\r\n//           const errorMessage = document.getElementById('error-message');\r\n//           errorMessage.textContent = 'Invalid email or password';\r\n//         }\r\n//       })\r\n//       .catch(error => {\r\n//         // Display error message for any other errors on the page\r\n//         // Instead of logging to console\r\n//         const errorMessage = document.getElementById('error-message');\r\n//         errorMessage.textContent = 'Error: Failed to fetch user data';\r\n//       });\r\n//     };\r\n    \r\n  \r\n\r\n\r\n//   return (\r\n//     <BackgroundWrapper>\r\n//     <Container>\r\n//       <Form onSubmit={handleSubmit}>\r\n//         <Title>VibeTribe</Title>\r\n//         <Label htmlFor=\"email\">Email:</Label>\r\n//         <Input\r\n//           type=\"email\"\r\n//           id=\"email\"\r\n//           name=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <Label htmlFor=\"college\">College Name:</Label>\r\n//         <Input\r\n//           type=\"text\"\r\n//           id=\"college\"\r\n//           name=\"college\"\r\n//           value={college}\r\n//           onChange={(e) => setCollege(e.target.value)}\r\n//           required\r\n//         />\r\n//         <Label htmlFor=\"password\">Password:</Label>\r\n//         <Input\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           name=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//         <div id=\"error-message\"    style={errorMessageStyle}  ></div>\r\n\r\n\r\n//         <Button type=\"submit\">Log in</Button>\r\n//       </Form>\r\n//       <Divider>OR</Divider>\r\n//       <OAuthButton href=\"http://localhost:4000/auth/google\">\r\n//         <img src={googleLogo} alt=\"Google Logo\" />\r\n//         Continue with Google\r\n//       </OAuthButton>\r\n//       <SignupLink>\r\n//         Not registered yet? <a href=\"/signup\">Sign up</a>\r\n//       </SignupLink>\r\n//     </Container>\r\n//     </BackgroundWrapper>\r\n//   );\r\n// };\r\n\r\n// export default LoginPage; \r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport googleLogo from './google.png';\r\nimport image from './image2.jpg';\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst BackgroundWrapper = styled.div`\r\n  background-image: url(${image});\r\n  background-size: 250px 250px;\r\n  background-repeat: repeat;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n// ... (other styled components omitted for brevity)\r\n\r\nconst errorMessageStyle = {\r\n  color: 'red',\r\n  fontSize: '14px',\r\n  marginTop: '10px',\r\n};\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [college, setCollege] = useState('');\r\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Make a GET request to fetch user data by ID\r\n    fetch(`http://localhost:4000/login/${email}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch user data');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((userData) => {\r\n        if (userData.email === email && userData.password === password) {\r\n          window.location.href = 'http://localhost:3000/home';\r\n        } else {\r\n          const errorMessage = document.getElementById('error-message');\r\n          errorMessage.textContent = 'Invalid email or password';\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = document.getElementById('error-message');\r\n        errorMessage.textContent = 'Error: Failed to fetch user data';\r\n      });\r\n  };\r\n\r\n  const handleForgotPassword = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs\r\n      .sendForm('service_2h240l4', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID')\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <BackgroundWrapper>\r\n      <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Title>VibeTribe</Title>\r\n          <Label htmlFor=\"email\">Email:</Label>\r\n          <Input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <Label htmlFor=\"college\">College Name:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"college\"\r\n            name=\"college\"\r\n            value={college}\r\n            onChange={(e) => setCollege(e.target.value)}\r\n            required\r\n          />\r\n          <Label htmlFor=\"password\">Password:</Label>\r\n          <Input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <Label htmlFor=\"forgotPasswordEmail\">Enter your email for password reset:</Label>\r\n          <Input\r\n            type=\"email\"\r\n            id=\"forgotPasswordEmail\"\r\n            name=\"forgotPasswordEmail\"\r\n            value={forgotPasswordEmail}\r\n            onChange={(e) => setForgotPasswordEmail(e.target.value)}\r\n            required\r\n          />\r\n          <div id=\"error-message\" style={errorMessageStyle}></div>\r\n          <Button type=\"submit\">Log in</Button>\r\n          <Button type=\"button\" onClick={handleForgotPassword}>\r\n            Forgot Password\r\n          </Button>\r\n        </Form>\r\n        <Divider>OR</Divider>\r\n        <OAuthButton href=\"http://localhost:4000/auth/google\">\r\n          <img src={googleLogo} alt=\"Google Logo\" />\r\n          Continue with Google\r\n        </OAuthButton>\r\n        <SignupLink>\r\n          Not registered yet? <a href=\"/signup\">Sign up</a>\r\n        </SignupLink>\r\n      </Container>\r\n    </BackgroundWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,OAAO,MAAM,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}