{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Settings.css';import Navbar from'./Navbar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Settings(){const[formData,setFormData]=useState({name:'',email:'',password:'',college:''});const[user,setUser]=useState(null);const[updateSuccess,setUpdateSuccess]=useState(false);// State to track update success\nconst userEmail='kohlisanjay@gmail.com';// Replace with actual logged in user's email\nuseEffect(()=>{console.log('Fetching user data...');fetch(\"http://localhost:4000/login/\".concat(userEmail)).then(response=>{if(!response.ok){throw new Error('Failed to fetch user data');}return response.json();}).then(data=>{console.log('Fetched user data:',data);setUser(data);setFormData(data);}).catch(error=>console.error('Error fetching user data:',error));},[userEmail]);const handleInputChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleSubmit=e=>{e.preventDefault();fetch(\"http://localhost:4000/login/\".concat(userEmail),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)}).then(response=>{if(!response.ok){throw new Error('Failed to update user settings');}setUpdateSuccess(true);// Update success flag\nconsole.log('User settings updated successfully');}).catch(error=>{console.error('Error updating user settings:',error);setUpdateSuccess(false);// Update success flag to false if error occurs\n});};if(!user){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"settings-container\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"h2\",{className:\"settings-title\",children:\"Settings\"}),updateSuccess&&/*#__PURE__*/_jsx(\"p\",{children:\"Password updated successfully!\"}),\" \",/*#__PURE__*/_jsxs(\"form\",{className:\"settings-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"settings-form-label\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleInputChange,className:\"settings-form-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"settings-form-label\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleInputChange,className:\"settings-form-input\",disabled:true// Disable email input field to prevent editing\n})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"college\",className:\"settings-form-label\",children:\"College:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"college\",name:\"college\",value:formData.college,onChange:handleInputChange,className:\"settings-form-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"settings-form-label\",children:\"New Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,className:\"settings-form-input\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"settings-form-button\",children:\"Save Changes\"})]})]});}export default Settings;","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsx","_jsx","jsxs","_jsxs","Settings","formData","setFormData","name","email","password","college","user","setUser","updateSuccess","setUpdateSuccess","userEmail","console","log","fetch","concat","then","response","ok","Error","json","data","catch","error","handleInputChange","e","target","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","children","className","onSubmit","htmlFor","type","id","onChange","disabled"],"sources":["C:/Users/kohli/OneDrive/Documents/Collaborativeinterestapp/VibeTribe/frontend/src/components/Settings.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Settings.css';\r\nimport Navbar from './Navbar';\r\n\r\nfunction Settings() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    college: ''\r\n  });\r\n  const [user, setUser] = useState(null);\r\n  const [updateSuccess, setUpdateSuccess] = useState(false); // State to track update success\r\n  const userEmail = 'kohlisanjay@gmail.com'; // Replace with actual logged in user's email\r\n\r\n  useEffect(() => {\r\n    console.log('Fetching user data...');\r\n    fetch(`http://localhost:4000/login/${userEmail}`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch user data');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        console.log('Fetched user data:', data);\r\n        setUser(data);\r\n        setFormData(data);\r\n      })\r\n      .catch(error => console.error('Error fetching user data:', error));\r\n  }, [userEmail]);\r\n  \r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    fetch(`http://localhost:4000/login/${userEmail}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to update user settings');\r\n        }\r\n        setUpdateSuccess(true); // Update success flag\r\n        console.log('User settings updated successfully');\r\n      })\r\n      .catch(error => {\r\n        console.error('Error updating user settings:', error);\r\n        setUpdateSuccess(false); // Update success flag to false if error occurs\r\n      });\r\n  };\r\n\r\n  if (!user) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <Navbar />\r\n      <h2 className=\"settings-title\">Settings</h2>\r\n      {updateSuccess && <p>Password updated successfully!</p>} {/* Display update success message */}\r\n      <form className=\"settings-form\" onSubmit={handleSubmit}>\r\n        <div className=\"settings-form-group\">\r\n          <label htmlFor=\"name\" className=\"settings-form-label\">\r\n            Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n            className=\"settings-form-input\"\r\n          />\r\n        </div>\r\n        <div className=\"settings-form-group\">\r\n          <label htmlFor=\"email\" className=\"settings-form-label\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            className=\"settings-form-input\"\r\n            disabled // Disable email input field to prevent editing\r\n          />\r\n        </div>\r\n        <div className=\"settings-form-group\">\r\n          <label htmlFor=\"college\" className=\"settings-form-label\">\r\n            College:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"college\"\r\n            name=\"college\"\r\n            value={formData.college}\r\n            onChange={handleInputChange}\r\n            className=\"settings-form-input\"\r\n          />\r\n        </div>\r\n        <div className=\"settings-form-group\">\r\n          <label htmlFor=\"password\" className=\"settings-form-label\">\r\n            New Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            className=\"settings-form-input\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"settings-form-button\">\r\n          Save Changes\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}