{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kohli\\\\OneDrive\\\\Documents\\\\Collaborative interest app\\\\frontend\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomCalendar() {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/calendar').then(response => response.json()).then(data => {\n      const formattedEvents = data.map(event => ({\n        date: new Date(eval(event.date)),\n        title: event.title,\n        color: event.color\n      }));\n      setEvents(formattedEvents);\n    }).catch(error => console.error('Error fetching events:', error));\n  }, []);\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    const eventForDate = events.find(event => event.date.getFullYear() === date.getFullYear() && event.date.getMonth() === date.getMonth() && event.date.getDate() === date.getDate());\n    return eventForDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: eventForDate.color,\n        color: '#fff',\n        padding: '5px',\n        borderRadius: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this) : null;\n  };\n  const getEventsForMonth = (month, year) => {\n    const eventsForMonth = events.filter(event => event.date.getMonth() === month && event.date.getFullYear() === year);\n    return eventsForMonth.length > 0 ? eventsForMonth : null;\n  };\n  const calendarContainerStyle = {\n    width: '100%',\n    height: '100%',\n    border: 'none',\n    borderRadius: '0',\n    padding: '0',\n    backgroundColor: '#fff',\n    boxShadow: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '0'\n  };\n  const pageStyle = {\n    backgroundColor: '#000',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: calendarContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: setDate,\n            value: date,\n            tileContent: tileContent,\n            tileDisabled: () => false,\n            tileClassName: ({\n              date\n            }) => {\n              const isWeekend = date.getDay() === 0 || date.getDay() === 6;\n              return isWeekend ? 'weekend' : null;\n            },\n            navigationLabel: ({\n              date\n            }) => `${date.toLocaleString('default', {\n              month: 'long'\n            })} ${date.getFullYear()}`,\n            showNeighboringMonth: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Events for\", ' ', new Date(date.getFullYear(), date.getMonth()).toLocaleString('default', {\n              month: 'long'\n            }), ' ', date.getFullYear()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), getEventsForMonth(date.getMonth(), date.getFullYear()) ? getEventsForMonth(date.getMonth(), date.getFullYear()).map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '20px',\n                height: '20px',\n                backgroundColor: event.color,\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No events for this month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomCalendar, \"h7uvpgV1VJisuF+imWYZCd/5B78=\");\n_c = CustomCalendar;\nexport default CustomCalendar;\nvar _c;\n$RefreshReg$(_c, \"CustomCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Navbar","jsxDEV","_jsxDEV","CustomCalendar","_s","date","setDate","Date","events","setEvents","fetch","then","response","json","data","formattedEvents","map","event","eval","title","color","catch","error","console","tileContent","view","eventForDate","find","getFullYear","getMonth","getDate","style","backgroundColor","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","getEventsForMonth","month","year","eventsForMonth","filter","length","calendarContainerStyle","width","height","border","boxShadow","display","justifyContent","alignItems","margin","pageStyle","children","flexDirection","onChange","value","tileDisabled","tileClassName","isWeekend","getDay","navigationLabel","toLocaleString","showNeighboringMonth","marginLeft","index","marginBottom","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/kohli/OneDrive/Documents/Collaborative interest app/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Navbar from './Navbar';\r\n\r\nfunction CustomCalendar() {\r\n  const [date, setDate] = useState(new Date());\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/calendar')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const formattedEvents = data.map(event => ({\r\n          date: new Date(eval(event.date)),\r\n          title: event.title,\r\n          color: event.color,\r\n        }));\r\n        setEvents(formattedEvents);\r\n      })\r\n      .catch(error => console.error('Error fetching events:', error));\r\n  }, []);\r\n\r\n  const tileContent = ({ date, view }) => {\r\n    const eventForDate = events.find(\r\n      (event) =>\r\n        event.date.getFullYear() === date.getFullYear() &&\r\n        event.date.getMonth() === date.getMonth() &&\r\n        event.date.getDate() === date.getDate()\r\n    );\r\n    return eventForDate ? (\r\n      <div\r\n        style={{\r\n          backgroundColor: eventForDate.color,\r\n          color: '#fff',\r\n          padding: '5px',\r\n          borderRadius: '5px',\r\n        }}\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  const getEventsForMonth = (month, year) => {\r\n    const eventsForMonth = events.filter(\r\n      (event) =>\r\n        event.date.getMonth() === month && event.date.getFullYear() === year\r\n    );\r\n    return eventsForMonth.length > 0 ? eventsForMonth : null;\r\n  };\r\n\r\n  const calendarContainerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    border: 'none',\r\n    borderRadius: '0',\r\n    padding: '0',\r\n    backgroundColor: '#fff',\r\n    boxShadow: 'none',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '0',\r\n  };\r\n\r\n  const pageStyle = {\r\n    backgroundColor: '#000',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  return (\r\n    <div style={pageStyle}>\r\n      <Navbar />\r\n      <div style={calendarContainerStyle}>\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Calendar\r\n              onChange={setDate}\r\n              value={date}\r\n              tileContent={tileContent}\r\n              tileDisabled={() => false}\r\n              tileClassName={({ date }) => {\r\n                const isWeekend = date.getDay() === 0 || date.getDay() === 6;\r\n                return isWeekend ? 'weekend' : null;\r\n              }}\r\n              navigationLabel={({ date }) =>\r\n                `${date.toLocaleString('default', { month: 'long' })} ${date.getFullYear()}`\r\n              }\r\n              showNeighboringMonth={false}\r\n            />\r\n          </div>\r\n          <div style={{ marginLeft: '20px' }}>\r\n            <h2>\r\n              Events for{' '}\r\n              {new Date(date.getFullYear(), date.getMonth()).toLocaleString('default', {\r\n                month: 'long',\r\n              })}{' '}\r\n              {date.getFullYear()}\r\n            </h2>\r\n            {getEventsForMonth(date.getMonth(), date.getFullYear()) ? (\r\n              getEventsForMonth(date.getMonth(), date.getFullYear()).map((event, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginBottom: '10px',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '20px',\r\n                      height: '20px',\r\n                      backgroundColor: event.color,\r\n                      marginRight: '10px',\r\n                    }}\r\n                  />\r\n                  <span>{event.title}</span>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No events for this month</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}