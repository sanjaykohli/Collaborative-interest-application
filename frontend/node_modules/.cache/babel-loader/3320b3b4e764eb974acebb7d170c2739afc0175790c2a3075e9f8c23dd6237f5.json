{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kohli\\\\OneDrive\\\\Documents\\\\Collaborative interest app\\\\frontend\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomCalendar() {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(date.getMonth());\n  const [currentYear, setCurrentYear] = useState(date.getFullYear());\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/calendar').then(response => response.json()).then(data => {\n      const formattedEvents = data.map(event => ({\n        date: new Date(eval(event.date)),\n        title: event.title,\n        color: event.color\n      }));\n      setEvents(formattedEvents);\n    }).catch(error => console.error('Error fetching events:', error));\n  }, []);\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    const eventForDate = events.find(event => event.date.getFullYear() === date.getFullYear() && event.date.getMonth() === date.getMonth() && event.date.getDate() === date.getDate());\n    return eventForDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: eventForDate.color,\n        color: '#fff',\n        padding: '5px',\n        borderRadius: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this) : null;\n  };\n  const getEventsForMonth = (month, year) => {\n    const eventsForMonth = events.filter(event => event.date.getMonth() === month && event.date.getFullYear() === year);\n    return eventsForMonth.length > 0 ? eventsForMonth : null;\n  };\n  const calendarContainerStyle = {\n    width: '100%',\n    height: '100%',\n    border: 'none',\n    borderRadius: '0',\n    padding: '0',\n    backgroundColor: '#fff',\n    boxShadow: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '0'\n  };\n  const pageStyle = {\n    backgroundColor: '#000',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: calendarContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Events for\", ' ', new Date(currentYear, currentMonth).toLocaleString('default', {\n              month: 'long'\n            }), ' ', currentYear]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), getEventsForMonth(currentMonth, currentYear) ? getEventsForMonth(currentMonth, currentYear).map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '20px',\n                height: '20px',\n                backgroundColor: event.color,\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No events for this month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomCalendar, \"FbAOyaWo/R10GbvSyuCEK5YscOw=\");\n_c = CustomCalendar;\nexport default CustomCalendar;\nvar _c;\n$RefreshReg$(_c, \"CustomCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Navbar","jsxDEV","_jsxDEV","CustomCalendar","_s","date","setDate","Date","currentMonth","setCurrentMonth","getMonth","currentYear","setCurrentYear","getFullYear","events","setEvents","fetch","then","response","json","data","formattedEvents","map","event","eval","title","color","catch","error","console","tileContent","view","eventForDate","find","getDate","style","backgroundColor","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","getEventsForMonth","month","year","eventsForMonth","filter","length","calendarContainerStyle","width","height","border","boxShadow","display","justifyContent","alignItems","margin","pageStyle","children","flexDirection","marginLeft","toLocaleString","index","marginBottom","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/kohli/OneDrive/Documents/Collaborative interest app/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Navbar from './Navbar';\r\n\r\nfunction CustomCalendar() {\r\n  const [date, setDate] = useState(new Date());\r\n  const [currentMonth, setCurrentMonth] = useState(date.getMonth());\r\n  const [currentYear, setCurrentYear] = useState(date.getFullYear());\r\n  const [events, setEvents] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/calendar')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const formattedEvents = data.map(event => ({\r\n          date: new Date(eval(event.date)),\r\n          title: event.title,\r\n          color: event.color,\r\n        }));\r\n        setEvents(formattedEvents);\r\n      })\r\n      .catch(error => console.error('Error fetching events:', error));\r\n  }, []);\r\n\r\n  const tileContent = ({ date, view }) => {\r\n    const eventForDate = events.find(\r\n      (event) =>\r\n        event.date.getFullYear() === date.getFullYear() &&\r\n        event.date.getMonth() === date.getMonth() &&\r\n        event.date.getDate() === date.getDate()\r\n    );\r\n    return eventForDate ? (\r\n      <div\r\n        style={{\r\n          backgroundColor: eventForDate.color,\r\n          color: '#fff',\r\n          padding: '5px',\r\n          borderRadius: '5px',\r\n        }}\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  const getEventsForMonth = (month, year) => {\r\n    const eventsForMonth = events.filter(\r\n      (event) =>\r\n        event.date.getMonth() === month && event.date.getFullYear() === year\r\n    );\r\n    return eventsForMonth.length > 0 ? eventsForMonth : null;\r\n  };\r\n\r\n\r\n\r\n\r\n  const calendarContainerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    border: 'none',\r\n    borderRadius: '0',\r\n    padding: '0',\r\n    backgroundColor: '#fff',\r\n    boxShadow: 'none',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '0',\r\n  };\r\n\r\n  const pageStyle = {\r\n    backgroundColor: '#000',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={pageStyle}>\r\n      <Navbar />\r\n      <div style={calendarContainerStyle}>\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            \r\n            \r\n          </div>\r\n          <div style={{ marginLeft: '20px' }}>\r\n            <h2>\r\n              Events for{' '}\r\n              {new Date(currentYear, currentMonth).toLocaleString('default', {\r\n                month: 'long',\r\n              })}{' '}\r\n              {currentYear}\r\n            </h2>\r\n            {getEventsForMonth(currentMonth, currentYear) ? (\r\n              getEventsForMonth(currentMonth, currentYear).map((event, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginBottom: '10px',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '20px',\r\n                      height: '20px',\r\n                      backgroundColor: event.color,\r\n                      marginRight: '10px',\r\n                    }}\r\n                  />\r\n                  <span>{event.title}</span>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No events for this month</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomCalendar; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACQ,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACQ,IAAI,CAACQ,WAAW,CAAC,CAAC,CAAC;EAClE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAGxCC,SAAS,CAAC,MAAM;IACdkB,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,eAAe,GAAGD,IAAI,CAACE,GAAG,CAACC,KAAK,KAAK;QACzClB,IAAI,EAAE,IAAIE,IAAI,CAACiB,IAAI,CAACD,KAAK,CAAClB,IAAI,CAAC,CAAC;QAChCoB,KAAK,EAAEF,KAAK,CAACE,KAAK;QAClBC,KAAK,EAAEH,KAAK,CAACG;MACf,CAAC,CAAC,CAAC;MACHX,SAAS,CAACM,eAAe,CAAC;IAC5B,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,WAAW,GAAGA,CAAC;IAAEzB,IAAI;IAAE0B;EAAK,CAAC,KAAK;IACtC,MAAMC,YAAY,GAAGlB,MAAM,CAACmB,IAAI,CAC7BV,KAAK,IACJA,KAAK,CAAClB,IAAI,CAACQ,WAAW,CAAC,CAAC,KAAKR,IAAI,CAACQ,WAAW,CAAC,CAAC,IAC/CU,KAAK,CAAClB,IAAI,CAACK,QAAQ,CAAC,CAAC,KAAKL,IAAI,CAACK,QAAQ,CAAC,CAAC,IACzCa,KAAK,CAAClB,IAAI,CAAC6B,OAAO,CAAC,CAAC,KAAK7B,IAAI,CAAC6B,OAAO,CAAC,CAC1C,CAAC;IACD,OAAOF,YAAY,gBACjB9B,OAAA;MACEiC,KAAK,EAAE;QACLC,eAAe,EAAEJ,YAAY,CAACN,KAAK;QACnCA,KAAK,EAAE,MAAM;QACbW,OAAO,EAAE,KAAK;QACdC,YAAY,EAAE;MAChB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,GACA,IAAI;EACV,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACzC,MAAMC,cAAc,GAAGhC,MAAM,CAACiC,MAAM,CACjCxB,KAAK,IACJA,KAAK,CAAClB,IAAI,CAACK,QAAQ,CAAC,CAAC,KAAKkC,KAAK,IAAIrB,KAAK,CAAClB,IAAI,CAACQ,WAAW,CAAC,CAAC,KAAKgC,IACpE,CAAC;IACD,OAAOC,cAAc,CAACE,MAAM,GAAG,CAAC,GAAGF,cAAc,GAAG,IAAI;EAC1D,CAAC;EAKD,MAAMG,sBAAsB,GAAG;IAC7BC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE,MAAM;IACdd,YAAY,EAAE,GAAG;IACjBD,OAAO,EAAE,GAAG;IACZD,eAAe,EAAE,MAAM;IACvBiB,SAAS,EAAE,MAAM;IACjBC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBtB,eAAe,EAAE,MAAM;IACvBe,MAAM,EAAE,OAAO;IACfG,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EAGD,oBACEtD,OAAA;IAAKiC,KAAK,EAAEuB,SAAU;IAAAC,QAAA,gBACpBzD,OAAA,CAACF,MAAM;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxC,OAAA;MAAKiC,KAAK,EAAEc,sBAAuB;MAAAU,QAAA,eACjCzD,OAAA;QAAKiC,KAAK,EAAE;UAAEmB,OAAO,EAAE;QAAO,CAAE;QAAAK,QAAA,gBAC9BzD,OAAA;UAAKiC,KAAK,EAAE;YAAEmB,OAAO,EAAE,MAAM;YAAEM,aAAa,EAAE;UAAS;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGpD,CAAC,eACNxC,OAAA;UAAKiC,KAAK,EAAE;YAAE0B,UAAU,EAAE;UAAO,CAAE;UAAAF,QAAA,gBACjCzD,OAAA;YAAAyD,QAAA,GAAI,YACQ,EAAC,GAAG,EACb,IAAIpD,IAAI,CAACI,WAAW,EAAEH,YAAY,CAAC,CAACsD,cAAc,CAAC,SAAS,EAAE;cAC7DlB,KAAK,EAAE;YACT,CAAC,CAAC,EAAE,GAAG,EACNjC,WAAW;UAAA;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,EACJC,iBAAiB,CAACnC,YAAY,EAAEG,WAAW,CAAC,GAC3CgC,iBAAiB,CAACnC,YAAY,EAAEG,WAAW,CAAC,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEwC,KAAK,kBAC5D7D,OAAA;YAEEiC,KAAK,EAAE;cACLmB,OAAO,EAAE,MAAM;cACfE,UAAU,EAAE,QAAQ;cACpBQ,YAAY,EAAE;YAChB,CAAE;YAAAL,QAAA,gBAEFzD,OAAA;cACEiC,KAAK,EAAE;gBACLe,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE,MAAM;gBACdf,eAAe,EAAEb,KAAK,CAACG,KAAK;gBAC5BuC,WAAW,EAAE;cACf;YAAE;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFxC,OAAA;cAAAyD,QAAA,EAAOpC,KAAK,CAACE;YAAK;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAfrBqB,KAAK;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBP,CACN,CAAC,gBAEFxC,OAAA;YAAAyD,QAAA,EAAG;UAAwB;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC/B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtC,EAAA,CAxHQD,cAAc;AAAA+D,EAAA,GAAd/D,cAAc;AA0HvB,eAAeA,cAAc;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}