{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kohli\\\\OneDrive\\\\Documents\\\\Collaborative interest app\\\\frontend\\\\src\\\\components\\\\watch.js\",\n  _s = $RefreshSig$();\n// Watch.js\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport './Watch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watch = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    // Fetch video/reel data from an API or use mock data\n    const mockData = [{\n      id: 1,\n      type: 'youtube',\n      url: 'https://www.youtube.com/embed/VIDEO_ID_1'\n    }, {\n      id: 2,\n      type: 'instagram',\n      url: 'https://www.instagram.com/p/REEL_ID_2/embed'\n    }, {\n      id: 3,\n      type: 'youtube',\n      url: 'https://www.youtube.com/embed/VIDEO_ID_3'\n    }\n    // Add more video/reel data as needed\n    ];\n    setVideos(mockData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watch-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watch-grid\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watch-item\",\n        children: video.type === 'youtube' ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: `YouTube Video ${video.id}`,\n          src: video.url,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: `Instagram Reel ${video.id}`,\n          src: video.url,\n          frameBorder: \"0\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Watch, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = Watch;\nexport default Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Watch","_s","videos","setVideos","mockData","id","type","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","video","title","src","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/kohli/OneDrive/Documents/Collaborative interest app/frontend/src/components/watch.js"],"sourcesContent":["// Watch.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport './Watch.css';\r\n\r\nconst Watch = () => {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch video/reel data from an API or use mock data\r\n    const mockData = [\r\n      { id: 1, type: 'youtube', url: 'https://www.youtube.com/embed/VIDEO_ID_1' },\r\n      { id: 2, type: 'instagram', url: 'https://www.instagram.com/p/REEL_ID_2/embed' },\r\n      { id: 3, type: 'youtube', url: 'https://www.youtube.com/embed/VIDEO_ID_3' },\r\n      // Add more video/reel data as needed\r\n    ];\r\n\r\n    setVideos(mockData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"watch-container\">\r\n      <Navbar />\r\n      <div className=\"watch-grid\">\r\n        {videos.map((video) => (\r\n          <div key={video.id} className=\"watch-item\">\r\n            {video.type === 'youtube' ? (\r\n              <iframe\r\n                title={`YouTube Video ${video.id}`}\r\n                src={video.url}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              />\r\n            ) : (\r\n              <iframe\r\n                title={`Instagram Reel ${video.id}`}\r\n                src={video.url}\r\n                frameBorder=\"0\"\r\n                allowFullScreen\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watch;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,QAAQ,GAAG,CACf;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,GAAG,EAAE;IAA2C,CAAC,EAC3E;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,GAAG,EAAE;IAA8C,CAAC,EAChF;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,GAAG,EAAE;IAA2C;IAC1E;IAAA,CACD;IAEDJ,SAAS,CAACC,QAAQ,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKS,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BV,OAAA,CAACF,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVd,OAAA;MAAKS,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBP,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAChBhB,OAAA;QAAoBS,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvCM,KAAK,CAACT,IAAI,KAAK,SAAS,gBACvBP,OAAA;UACEiB,KAAK,EAAG,iBAAgBD,KAAK,CAACV,EAAG,EAAE;UACnCY,GAAG,EAAEF,KAAK,CAACR,GAAI;UACfW,WAAW,EAAC,GAAG;UACfC,KAAK,EAAC,yEAAyE;UAC/EC,eAAe;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,gBAEFd,OAAA;UACEiB,KAAK,EAAG,kBAAiBD,KAAK,CAACV,EAAG,EAAE;UACpCY,GAAG,EAAEF,KAAK,CAACR,GAAI;UACfW,WAAW,EAAC,GAAG;UACfE,eAAe;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MACF,GAhBOE,KAAK,CAACV,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CA1CID,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AA4CX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}